input {
  cloudwatch_logs {
        "log_group" => ["log"]
        "access_key_id" => "AKIAPYFONKHR3G73SZVA"
        "secret_access_key" => "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"
        "region" => "cn-northwest-1"
      }
    }

filter {
   grok { 
      match => { "message" =>"%{INT:version} %{BASE10NUM:account_id} %{HOSTNAME:interface_id} %{IPV4:source_ip} %{IPV4:dest_ip} %{BASE10NUM:src_port} %{BASE10NUM:dest_port} %{BASE10NUM:protocol} %{BASE10NUM:packets} %{BASE10NUM:size} %{BASE10NUM:start} %{BASE10NUM:end} %{WORD:action} %{WORD:log_status}" }
      remove_field => [ "message" ]
      }

   date {
      match => ["start",  "UNIX"]
      target => "start_time"
      remove_field => [ "start" ] 
   }
   date {
      match => ["end",  "UNIX"]
      target => "end_time"
      remove_field => [ "end" ] 
   }
  
   translate {
       field => "protocol"
       destination => "ip_protocol"
       dictionary_path => "/usr/local/logstash-6.2.4/translate/protocol.yml"
       refresh_interval => 86400
       remove_field => "protocol"
   }

   translate {
       field => "source_ip"
       destination => "customer"
       dictionary_path => "/usr/local/logstash-6.2.4/translate/customerip.yml"
       refresh_interval => 86400
       add_field => { "sfully" => "%{customer} %{source_ip}" }
    }
  translate {
       field => "dest_ip"
       destination => "customer"
       dictionary_path => "/usr/local/logstash-6.2.4/translate/customerip.yml"
       refresh_interval => 86400
       add_field => { "dfully" => "%{customer} %{dest_ip}" }
     }


   geoip {
      source => "source_ip"
   }

   if "_geoip_lookup_failure" in [tags] {
                        drop {}
   }
  
}

output {
  elasticsearch {
    action => "index"
    hosts  => ["172.31.47.203:9200"]
    index  => "aws-cloudwatch-%{+YYYY.MM.dd}"
    template => "/usr/local/logstash-6.2.4/conf/cloudwatch_template.json"
    template_name => "cloudwatch"
  }
}
